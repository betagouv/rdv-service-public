name: CI
on:
  push:
    paths-ignore:
      - 'docs/**'
jobs:
  rubocop:
    name: Ruby linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - run: bundle exec rubocop --parallel
  lint_slim:
    name: Slim Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - run: bundle exec slim-lint app/views/
  lint_prettier:
    name: Lint SCSS with Prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: yarn
      - name: Cache js dependencies
        uses: actions/cache@v4
        with:
          key: node_modules-${{ hashFiles('yarn.lock') }}
          path: node_modules
      - run: yarn install
      - run: yarn run prettier --check .
  brakeman:
    name: Security Checker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - run: bundle exec brakeman
  active_record_doctor:
    name: active_record_doctor
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: lapin_development
          POSTGRES_PASSWORD: lapin_development
          POSTGRES_DB: lapin_development
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: ["5432:5432"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Run active_record_doctor:missing_foreign_keys
        run: bundle exec rails active_record_doctor:missing_foreign_keys
        env:
          HOST: http://example.com
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: lapin_development
          POSTGRES_PASSWORD: lapin_development
          POSTGRES_DB: lapin_development
      - name: Run active_record_doctor:missing_non_null_constraint
        run: bundle exec rails active_record_doctor:missing_non_null_constraint
        env:
          HOST: http://example.com
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: lapin_development
          POSTGRES_PASSWORD: lapin_development
          POSTGRES_DB: lapin_development
  test_unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: lapin_test
          POSTGRES_PASSWORD: lapin_test
          POSTGRES_DB: lapin_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: ["5432:5432"]
    steps:
      - uses: actions/checkout@v4
      - uses: WitherZuo/set-timezone@v1.0.0
        with:
          timezoneLinux: "Europe/Paris"
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Set up Redis
        uses: zhulik/redis-action@1.1.0
      - name: Cache js dependencies
        uses: actions/cache@v4
        with:
          key: node_modules-${{ hashFiles('yarn.lock') }}
          path: node_modules
      - name: Install JS dependencies
        run: yarn install
      - name: Precompile assets
        run: yarn run build
      - name: Prepare runtime log cache key
        run: ls spec/**/*.rb > tmp/spec_files.txt
      - name: Cache parallel test unit spec runtime log
        uses: actions/cache@v4
        with:
          key: unit-spec-runtime-log-${{ hashFiles('tmp/spec_files.txt') }}
          path: tmp/parallel_runtime_rspec.log
      # By setting up and running in the same call, we save the app boot time
      - name: Setup parallel tests and run spec
        run: RAILS_ENV=test bundle exec rake parallel:drop parallel:create parallel:load_schema parallel:spec['spec\/(?!features)']
        env:
          HOST: http://example.com
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: lapin_test
          POSTGRES_PASSWORD: lapin_test
          POSTGRES_DB: lapin_test
  test_features:
    name: Feature Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: lapin_test
          POSTGRES_PASSWORD: lapin_test
          POSTGRES_DB: lapin_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: ["5432:5432"]
    steps:
      - uses: actions/checkout@v4
      - uses: WitherZuo/set-timezone@v1.0.0
        with:
          timezoneLinux: "Europe/Paris"
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Set up Redis
        uses: zhulik/redis-action@1.1.0
      - name: Cache js dependencies
        uses: actions/cache@v4
        with:
          key: node_modules-${{ hashFiles('yarn.lock') }}
          path: node_modules
      - name: Install JS dependencies
        run: yarn install
      - name: Precompile assets
        run: yarn run build
      - name: Prepare runtime log cache key
        run: ls spec/features/**/*.rb > tmp/feature_spec_files.txt
      - name: Cache parallel test feature spec runtime log
        uses: actions/cache@v4
        with:
          key: feature-spec-runtime-log-${{ hashFiles('tmp/feature_spec_files.txt') }}
          path: tmp/parallel_runtime_rspec.log
        # By setting up and running in the same call, we save the app boot time
      - name: Setup parallel tests and run feature specs
        run: RAILS_ENV=test bundle exec rake parallel:drop parallel:create parallel:load_schema parallel:spec[spec/features]
        env:
          HOST: http://example.com
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: lapin_test
          POSTGRES_PASSWORD: lapin_test
          POSTGRES_DB: lapin_test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: artifacts-capybara
          path: tmp/capybara
  test_boot_without_db:
    name: Boot web server without database
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Cache js dependencies
        uses: actions/cache@v4
        with:
          key: node_modules-${{ hashFiles('yarn.lock') }}
          path: node_modules
      - run: yarn install
      - run: bin/test_boot
        env:
          HOST: http://www.rdv-test.fr
