tr
  td.pr-0.text-right
    span.badge.badge-pill.ml-0.mr-2 style="background: #{motif.color};" &nbsp;
  td
    = link_to motif.name, admin_organisation_motif_path(motif.organisation, motif)
    = motif_badges(motif, only: %i[secretariat follow_up collectif])
  td
    = motif_badges(motif, only: %i[bookable_by_everyone bookable_by_invited_users])
  - if @display_sectorisation_level
    td
      - if motif.bookable_outside_of_organisation?
        | &nbsp;
      - elsif motif.sectorisation_level_departement?
        | Tout le #{current_organisation.departement_number}
      - elsif motif.sectorisation_level_organisation?
        = t("motifs.index.sectorisation_level_organisation", count: @sectors_attributed_to_organisation_count)
      - elsif motif.sectorisation_level_agent?
        - counts = @sectorisation_level_agent_counts_by_service.fetch(motif.service_id, {agents_count: 0})
        = t("motifs.index.sectorisation_level_agent", count: counts[:agents_count], sectors_count_human: \
            t("motifs.index.sectorisation_level_organisation", count: counts[:sectors_count]))
  td= motif.service.short_name
  td= motif.human_attribute_value(:location_type)
  td= "#{motif.default_duration_in_min} min."
  - if policy([:agent, motif]).edit? || policy([:agent, motif]).destroy?
    td
      .d-flex
        - if policy([:agent, motif]).edit?
          div.mr-3= link_to edit_admin_organisation_motif_path(current_organisation, motif), title: "Modifier" do
            i.fa.fa-edit
        - if policy([:agent, motif]).destroy?
          div= link_to admin_organisation_motif_path(current_organisation, motif), method: :delete, title: "Supprimer", data: { confirm: "Confirmez-vous la suppression de ce motif ?"} do
            i.fa.fa-trash-alt
