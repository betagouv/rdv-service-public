- content_for(:menu_item) { @agent ? "menu-agendas" : "menu-rdvs-list" }

- content_for :breadcrumb do
  ol.breadcrumb.m-0.p-0
    - if @agent
      li.breadcrumb-item.p-0
        - if @agent != current_agent
          = link_to "Agenda de #{@agent.full_name}", admin_organisation_agent_agenda_path(current_organisation, @agent)
        - else
          = link_to "Votre agenda", admin_organisation_agent_agenda_path(current_organisation, current_agent)
    li.breadcrumb-item.p-0.ml-2
      | RDV
      |&nbsp;
      = rdv_title_for_agent(@rdv)
    li.breadcrumb-item.p-0.ml-2
      | Modifier

- content_for :title do
  | Modifier le RDV

.row.justify-content-center
  .col-md-8
    .card
      .card-body
        = simple_form_for([:admin, @rdv_form.organisation, @rdv]) do |f|
          = render "model_errors", model: @rdv_form, f: f
          = collapsible_form_fields_for_warnings(@rdv_form) do
            = hidden_field_tag :agent_id, @agent&.id
            = f.association :motif, collection: [@rdv_form.motif], disabled: true
            = f.input :context, input_html: { rows: 3 }
            .form-row
              .col-md-6 data={ "controller": "past-date-alert" }
                = datetime_input(f, :starts_at, input_html: { data: { "past-date-alert-target": "date-input" } })
              .col-md-6= f.input :duration_in_min
            - if @rdv_form.motif.public_office?

              - controller_data = { "controller": "rdv-lieu",
                      "initial-state": @rdv.lieu.availability,
                      "select-placeholder-single-use-lieu": t(".select_placeholder_single_use_lieu"),
                      "select-placeholder-existing-lieu": t(".select_placeholder_existing_lieu"), }
              .form-group data=controller_data
                = f.label :lieu, required: true
                fieldset
                  = f.association :lieu, collection: policy_scope(Lieu).enabled.ordered_by_name, label_method: :full_name,
                    label: false,  include_blank: true,  required: false,
                    input_html: { class: "select2-input", data: { "rdv-lieu-target": "existing_lieu_select", placeholder: ""} }
                  small.form-text.text-muted data={"rdv-lieu-target": "new_lieu_link"}
                    = t(".single_use_lieu_hint_html")
                fieldset data={ "rdv-lieu-target": "new_lieu_fieldset" }
                  .border.p-2.bg-light
                    = f.fields_for :lieu, (@rdv.lieu.availability == "enabled" ? Lieu.new : @rdv.lieu ) do |f2|
                      = render "admin/lieux/lieu_fields", f: f2
                  small.form-text.text-muted data={"rdv-lieu-target": "select_lieu_link"}
                    = t(".existing_lieu_hint_html")

            - elsif @rdv_form.motif.home?
              = f.input :address, label: "Lieu (RDV à domicile)", disabled: true
            = f.association :agents,
              collection: @rdv_form.agents,
              label_method: :full_name_and_service,
                    input_html: { \
                      multiple: true,
                      class: "select2-input",
                      data: { \
                        "select-options": { \
                          ajax: { \
                            url: admin_organisation_agents_path(current_organisation),
                            dataType: "json", delay: 250, \
                          }, \
                        }, \
                      }, \
                    }

            - if @rdv_form.motif.collectif?
              = f.input :name, label: "Intitulé (max 50 caractères)", wrapper_html: { class: "mb-1" }, input_html: { maxlength: 50 }
              p
                span.font-14.font-weight-bold= "Avertissement : "
                span.text-muted.font-14= I18n.t("activerecord.attributes.rdv/name.hint")

              = f.input :max_participants_count, input_html: { min: 1 }
            .form-group
              = "#{User.model_name.human.pluralize} :"
              = f.fields_for :rdvs_users, @rdv.rdvs_users do |rdv_user_form|
                = render "admin/rdvs_users/form", form: rdv_user_form

            .form-group
              = select_tag :status,
                      options_for_select([]),
                      include_blank: "Ajouter un usager",
                      required: false,
                      class: "select2-input js-rdv-user-select",
                      data: { \
                width: "auto", \
                "scroll-to-bottom": params[:add_user].present?, \
                "select-options": { ajax: { url: search_admin_organisation_users_path(current_organisation, exclude_ids: @rdv.rdvs_users.map(&:user_id)), dataType: "json", delay: 250 } }, \
               }
              span.small.text-muted
              | L'usager n'existe pas ?&nbsp;
              = link_to \
                "Créer un usager", \
                new_admin_organisation_user_path( \
                  current_organisation, modal: true, return_location: request.url, role: default_service_selection_from(@rdv.motif.service) \
                    ), \
                data: { modal: true }

            .text-right
              = link_to t("helpers.back"), admin_organisation_rdv_path(current_organisation, @rdv), class: "btn btn-link"
              = f.button :submit, t("helpers.submit.submit")
