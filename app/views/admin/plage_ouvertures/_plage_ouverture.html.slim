tr
  - organisation = plage_ouverture.organisation
  td
    = link_to plage_ouverture.title, admin_organisation_plage_ouverture_path(organisation, plage_ouverture)
    = po_exceptionnelle_tag(plage_ouverture)
    br
    small
      | modifiée le #{l(plage_ouverture.updated_at, format: :short)}
  td
    ul.pl-2
      - plage_ouverture.motifs.each do |motif|
        li= motif_name_with_location_type_and_badges(motif)
  td
    = lieu_tag(plage_ouverture.lieu)
  td
    - if plage_ouverture.recurrence.present?
      = sanitize(display_recurrence(plage_ouverture).join("<br/>"))
    - else
      | Le #{l(plage_ouverture.first_day, format: :human)} #{display_time_range(plage_ouverture)}
    - if plage_ouverture.overlapping_plages_ouvertures?
      .alert.alert-warning.py-1.px-2.mt-1 ⚠️ Conflit de dates
    - if plage_ouverture.overflow_motifs_duration?
      .alert.alert-warning.py-1.px-2.mt-1 ⚠️ Certains motifs débordent sur la durée de la plage
  td
    .d-flex
      div.mr-3= link_to edit_admin_organisation_plage_ouverture_path(organisation, plage_ouverture),
              title: t("helpers.edit") do
        i.fa.fa-edit
      div.mr-3= link_to new_admin_organisation_agent_plage_ouverture_path(organisation, plage_ouverture.agent, duplicate_plage_ouverture_id: plage_ouverture),
                title: t("helpers.clone") do
        i.fa.fa-clone
      div.mr-3= link_to( admin_organisation_plage_ouverture_path(organisation, plage_ouverture),
              method: :delete,
              title: t("helpers.delete"),
              data: { confirm: "Confirmez-vous la suppression de cette plage d'ouverture ?"} ) do
        i.fa.fa-trash-alt
