- content_for(:menu_item) { "menu-agents" }

- content_for :title do
  - if @agent_role.agent.is_an_intervenant?
    | Modifier l'intervenant #{@agent_role.agent.full_name}
  - else
    | Modifier le rôle de l'agent #{@agent_role.agent.full_name}

- content_for :breadcrumb do
  ol.breadcrumb.m-0
    li.breadcrumb-item
      = link_to "Vos agents", admin_organisation_agents_path(current_organisation)
    li.breadcrumb-item.active
      = @agent_role.agent.full_name

- if @agent_role.agent.is_an_intervenant?
  = render "admin/agent_intervenants/form", agent_intervenant: @agent_role.agent

.row.justify-content-center
  .col-md-8
    .card
      .card-body
        = simple_form_for [:admin, current_organisation, @agent_role], data: { originalAccessLevel: @original_access_level } do |f|
          = render "model_errors", model: @agent_role
          = f.simple_fields_for :agent do |ff|
            = ff.input :service_id, collection: [@agent_role.agent.service], as: :select, label: "Service", hint: "Vous ne pouvez pas changer un agent de service, cela créerait des incohérences. Si vous voulez vraiment réaliser cette opération, il faut supprimer et recréer le compte de l'agent", disabled: true

          = f.input :organisation, as: :hidden
          - # rubocop:disable Rails/OutputSafety
          = f.input :access_level, \
            collection: access_levels_collection, \
            label_method: -> { AgentRole.human_attribute_value(:access_level, _1, context: :explanation).html_safe }, \
            hint: "Les agents peuvent avoir des permissions différentes sur chaque organisation.", \
            as: :radio_buttons
          = f.simple_fields_for :agent do |af|
            = af.input :email, as: :email, label: "Email d'invitation de l'agent", wrapper_html: { style: "display:none;", id: "agent_email_input" }
          - # rubocop:enable Rails/OutputSafety

          .row
            - if policy([:agent, @agent_role.agent]).destroy?
              .col.text-left
                = link_to @agent_removal_presenter.button_value, \
                  admin_organisation_agent_path(current_organisation, @agent_role.agent), \
                  data: { confirm: @agent_removal_presenter.confirm_message }, \
                  method: :delete, \
                  class: "btn btn-outline-danger"
            .col.text-right
              = f.button :submit

.row.justify-content-center
  .col-md-8
    = render "admin/versions/resource_versions_row", policy_scope: :agent, resource: @agent_role.agent
