-content_for :html_head_prepend do
  / mapbox is hard to use with webpack because of
  / https://github.com/mapbox/mapbox-gl-js/issues/1649
  <script src="https://api.mapbox.com/mapbox-gl-js/v1.11.0/mapbox-gl.js"></script>
  <link href="https://api.mapbox.com/mapbox-gl-js/v1.11.0/mapbox-gl.css" rel="stylesheet" />

= territory_navigation(t(".title", name: @sector.name), [link_to("Sectorisation", admin_territory_sectorization_path(current_territory)), link_to("Secteurs", admin_territory_sectors_path(current_territory))])

.row.justify-content-center
  .col-md-6
    .card
      .card-body.d-flex.justify-content-between
        ul.list-unstyled
          li
            span> Nom:
            b= @sector.name
          li
            span> Identifiant:
            b= human_id(@sector)
        - if policy([:agent, @sector]).edit?
          div= link_to edit_admin_territory_sector_path(current_territory, @sector), class: "btn btn-primary w-100" do
            i.fa.fa-edit>
            | Modifier
    .card
      - if @zones.empty?
        .card-header
          .card-title
            h5 Communes ou rues associées
        .card-body
          .alert.alert-warning.d-flex.align-items-center
            div.mr-2.h4 ⚠️
            div
              .mb-1 Aucune commune ni rue associée
              div Ce secteur ne peut pas être recherché par les usagers
          div= link_to new_admin_territory_sector_zone_path(current_territory, @sector), class: "btn btn-primary w-100" do
            i.fa.fa-plus>
            span> Ajouter une commune ou une rue
      - else
        .p-2.d-flex.align-items-center
          div.flex-grow-1.text-center= page_entries_info @zones
          div= link_to new_admin_territory_sector_zone_path(current_territory, @sector), class: "btn btn-primary" do
            i.fa.fa-plus>
            span> Ajouter une commune ou une rue
        table.table
          thead
            tr
              th Commune
              th Rue
              th
          tbody
            - @zones.each do |zone|
              tr
                td
                  = zone.city_name
                  .badge.badge-light.text-monospace= zone.city_code
                - if zone.level_street?
                  td
                    = zone.street_name
                    .badge.badge-light.text-monospace= zone.street_ban_id
                - else
                  td.text-muted Commune entière
                td
                  - if policy([:agent, zone]).destroy?
                    = link_to "retirer", admin_territory_sector_zone_path(current_territory, @sector, zone), method: :delete
        div= paginate @zones
        .mb-2.text-center
          .mb-2= page_entries_info @zones
          - if @zones.count > 5
            .mb-2= link_to( \
              "🗑 Retirer les #{@zones.total_count} communes et rues de ce secteur …", \
              admin_territory_sector_zones_path(current_territory, @sector), \
              method: :delete, \
              data: { confirm: "Voulez-vous vraiment retirer ces #{@zones.total_count} communes et rues ?" }, \
              class: "btn btn-danger" \
            )
          .mb-2= link_to admin_territory_sector_zones_path(current_territory, @sector, format: "xls"), class: "btn btn-light" do
            i.fa.fa-download>
            span> Télécharger un export XLS des communes et rues

  .col-md-6
    .card
      .card-header
        .card-title
          h5 Organisations & Agents attribués
      .card-body
        - @sector.attributions.level_organisation.each do |attribution|
          div.mb-3
            div.mb-1
              span>= "Organisation entière #{attribution.organisation.name}"
              span.ml-2>= link_to "Retirer", admin_territory_sector_attribution_path(current_territory, @sector, attribution), method: :delete
            .pl-2.py-1.border-left
              - orga_motifs = Motif.sectorisation_level_organisation.where(organisation: attribution.organisation)
              .text-muted
                = t( \
                  "sectors.motifs_with_organisation_level_sectorisation", \
                  count: orga_motifs.count, \
                  organisation: attribution.organisation.name, \
                  motifs: orga_motifs.map(&:name).to_sentence.truncate(100) \
                )

        - @sector.attributions.level_agent.to_a.group_by(&:organisation).each do |organisation, all_attributions|
          div.mb-1= "Organisation #{organisation.name} :"
          .pl-2.py-1.border-left
            - all_attributions.group_by { _1.agent.service }.each do |service, attributions|
              span> Service #{service.short_name}
              span.text-muted.ml-1
                - service_motifs = Motif.sectorisation_level_agent.where(organisation: organisation, service: service)
                = t( \
                  "sectors.motifs_with_agent_level_sectorisation_in_service", \
                  count: service_motifs.count, \
                  service: service.short_name, \
                  motifs: service_motifs.map(&:name).to_sentence.truncate(100) \
                )
              ul.pl-3.mb-3
                - attributions.each do |attribution|
                  li.mb-1
                    span>= attribution.agent.full_name
                    span.ml-2>= link_to "Retirer", admin_territory_sector_attribution_path(current_territory, @sector, attribution), method: :delete

            .mb-3= link_to \
              "Attribuer un autre agent de #{organisation.name.truncate(20)}", \
              new_admin_territory_sector_attribution_path( \
                current_territory, \
                @sector, \
                level: "agent", \
                organisation_id: organisation.id \
            )

        - if @sector.attributions.empty?
          .alert.alert-warning.d-flex.align-items-center
            div.mr-2.h4 ⚠️
            div
              .mb-1 Aucune organisation ni agent attribués
              div Ce secteur ne renvoie pas de disponibilités
        = link_to new_admin_territory_sector_attribution_path(current_territory, @sector, level: "organisation"), class: "btn btn-primary w-100" do
          i.fa.fa-plus>
          | Attribuer une organisation ou un agent
      .card-footer
        .text-muted Lorsqu'un usager cherche une adresse couverte par ce secteur, les disponibilités des organisations ou des agents attribués lui seront proposées

    .card
      #zones-map.small[
        data-center-query="#{@sector&.zones&.first&.city_name}, #{current_territory.departement_number}"
      ]
      #zones-map-small-legend
        .hovered-city-container
          #js-hovered-city>
        ul.list-unstyled
          li.mb-1[
            data-color=sector_zone_color(@sector)
            data-city-codes-json={colors: @sector.zones.pluck(:city_code)}.to_json
            class="js-legend-organisation"
          ]
