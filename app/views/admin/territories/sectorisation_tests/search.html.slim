= territory_navigation(t(".title"), [link_to("Sectorisation", admin_territory_sectorization_path(current_territory))])

= form_with \
  url: admin_territory_sectorisation_test_path(current_territory:), \
  method: :get,
  as: "" \
do |f|
  .card
    .card-header Recherche
    .card-body
      .form-group
        = f.label :where, "Adresse", class: "form-control-label"
        = f.text_field \
          :where, \
          value: params[:where], \
          label: "Adresse", \
          placeholder: "ex : 21 rue Anatole France, Calais", \
          class: "places-js-container form-control"
      .row.align-items-center.bg-light.py-2.mb-2
        .col-lg-2 Infos de la Base Adresse
        .col-lg-2.form-group
          = f.label :departement, "Département", class: "form-control-label"
          = f.text_field :departement, readonly: true, class: "form-control", value: params[:departement]
        .col-lg-2.form-group
          = f.label :city_code, "Code commune", class: "form-control-label"
          = f.text_field :city_code, readonly: true, label: "Code commune", class: "form-control", value: params[:city_code]
        .col-lg-2.form-group
          = f.label :city_ban_id, "Code rue BAN", class: "form-control-label"
          = f.text_field :street_ban_id, readonly: true, label: "Code rue BAN", class: "form-control", value: params[:street_ban_id]
        .col-lg-2.form-group
          = f.label :latitude, "Latitude", class: "form-control-label"
          = f.text_field :latitude, readonly: true, label: "Latitude", class: "form-control", value: params[:latitude]
        .col-lg-2.form-group
          = f.label :longitude, "Longitude", class: "form-control-label"
          = f.text_field :longitude, readonly: true, label: "Longitude", class: "form-control", value: params[:longitude]
      = f.submit class: "btn btn-primary", value: "Tester la sectorisation de cette adresse"

  - if @geo_search
    .card
      .card-header Résultats pour cette adresse
      .card-body
        - if @geo_search.attributions?
          b= t("sectorisation_tests.attributed_sectors_count", count: @geo_search.matching_zones.count)
          ul
            - @geo_search.matching_zones.each do |zone|
              li
                span> Via le secteur
                span>= link_to zone.sector.name, admin_territory_sector_path(current_territory, zone.sector)
                span> ,
                - if zone.level_street?
                  span>= "la rue #{zone.street_name} dans la commune #{zone.city_name}"
                - else
                  span>= "la commune entière #{zone.city_name}"
                | est attribuée à :
                ul
                  - zone.sector.attributions.to_a.group_by(&:organisation).each do |organisation, attributions|
                    li= render partial: "attribution", collection: attributions, locals: { sectorisation_test_form: @geo_search }
          div
            b Cette adresse appartient au département #{params[:departement]}
            - if @geo_search.available_motifs_from_departement_organisations.empty?
              ul
                li.text-muted= t("sectorisation_tests.departement_motifs_count", count: 0)
            - else
              ul
                - @geo_search.available_motifs_from_departement_organisations.to_a.group_by { [_1.organisation, _1.service] }.each do |tuple, motifs|
                  - organisation, service = tuple
                  li= t("sectorisation_tests.departement_motifs_count", count: motifs.count, organisation: organisation.name, service: service.short_name)
                  ul
                    - motifs.each do |motif|
                      li= motif_name_and_location_type(motif)
        - else
          div Aucun résultat : cette adresse n'est attribuée à aucun secteur

        div
          b Combinaison des motifs disponibles (c'est ce que voit l'usager) :
          ul
            - @available_motifs_unique_names_and_location_types_by_service.each do |service, motifs|
              li
                | Service #{service.short_name}: #{motifs.count} motifs disponibles
                ul
                  - motifs.each do |motif|
                    li= motif_name_and_location_type(motif)

        .alert.alert-info.d-flex.align-items-center
          .mr-3
            .fa.fa-info
          div
            span> Ici,
            b> motif disponible
            span> désigne un motif disponible à la réservation en ligne par les usagers. Seuls les motifs ayant une plage d'ouverture active sont considérés disponibles.
