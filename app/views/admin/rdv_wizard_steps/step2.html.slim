ruby:
  content_for(:menu_item) { "menu-agendas" }
  content_for(:title) { t(".page_title", starts_at: l(@rdv.starts_at, format: :dense)) }
  modals_return_location = new_admin_organisation_rdv_wizard_step_path(@rdv_wizard.to_query.merge(step: 2))
  previous_steps = [{ step: 1, value: motif_name_and_location_type(@rdv.motif) } ]
  next_steps = [{step: 3}, {step: 4}]

= render "card", rdv_wizard_form: @rdv_wizard, previous_steps: previous_steps, next_steps: next_steps, step_title: t(".step_title") do
  = simple_form_for(@rdv_wizard, as: :rdv, url: admin_organisation_rdv_wizard_step_path(current_organisation), method: :get) do |f|
    = render "model_errors", model: @rdv_wizard
    = render "hidden_fields", f: f, step: 2, \
      fields: %i[motif_id starts_at lieu_id service_id], \
      agent_ids: @rdv.agent_ids,
      lieu_attributes: @rdv.nested_lieu_attributes

    - @rdv.users.each do |user|
      / https://stackoverflow.com/questions/2327621/creating-a-has-many-association-in-a-hidden-field
      = f.hidden_field "user_ids][", value: user.id
      .pl-2.my-1
        .d-flex
          div
            i.fa.fa-user
            | &nbsp;
            = reverse_full_name_and_birthdate(user)
            = relative_tag(user)
          ruby:
            remove_path_params = @rdv_wizard.to_query.deep_dup.merge(step: 2)
            remove_path_params[:user_ids].delete(user.id)
            remove_user_path = new_admin_organisation_rdv_wizard_step_path(remove_path_params)
          div.ml-2= link_to remove_user_path, title: t("helpers.remove")
            i.fa.fa-minus-circle
          div.ml-2
            = link_to edit_admin_organisation_user_path( \
                current_organisation, user, modal: true, return_location: modals_return_location, role: default_service_selection_from(user) \
              ), \
              data: { modal: "true" }, title: t("helpers.edit")
              i.fa.fa-edit

    - show_add_user = @rdv.users.empty?
    .pl-2.mt-2.collapse.collapse-add-user-selection.no-transition class=(show_add_user ? "" : "show")
      = link_to ".collapse-add-user-selection", data: { toggle: "collapse" }
        i.fa.fa-plus-circle
        span.ml-1= t("helpers.add")
    .mt-2.collapse.collapse-add-user-selection.no-transition class=(show_add_user ? "show" : "")
      = select_tag :status,
      options_for_select([]),
      include_blank: "Sélectionner un usager",
      required: false,
      class: "select2-input js-new-rdv-users-select",
      data: { \
        width: "auto", \
        "select-options": { ajax: { url: search_admin_organisation_users_path(current_organisation, exclude_ids: @rdv.users.map(&:id)), dataType: "json", delay: 250 }}, \
      }

      span.small.text-muted
        | L'usager n'existe pas ?&nbsp;
        = link_to \
          "Créer un usager", \
          new_admin_organisation_user_path( \
              current_organisation, modal: true, return_location: modals_return_location, role: default_service_selection_from(@rdv.motif.service) \
              ), \
          data: { modal: true }

    - if current_organisation.territory.enable_context_field
      .mt-3= f.input :context, as: :text, label: Rdv.human_attribute_name(:context), input_html: { rows: 4 }

    = render "actions", rdv_wizard_form: @rdv_wizard, submit_value: "Continuer", f: f

input type="hidden" name="js-canonical-path" value=modals_return_location
